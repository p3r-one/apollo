---

- name: Setting Hostname
  hostname:
    name: "{{ inventory_hostname }}"
  ignore_errors: true

# - name: Setting apollo environment
#   template:
#     src: "apollo_env.sh.j2"
#     dest: "/etc/profile.d/apollo_env.sh"
#     mode: 0755

# - name: $node A-Records
#   lineinfile: 
#     dest=/etc/hosts 
#     regexp='.*{{ item }}$' 
#     line="{{ hostvars[item]['cluster_ip'] }} {{ hostvars[item]['ansible_hostname'] }} {{ hostvars[item]['ansible_hostname'] }}.{{ arc['space']['space_domain'] }}" 
#     state=present
#   when: hostvars[item]['cluster_ip'] is defined
#   with_items: "{{ groups['cluster'] }}"

# - name: nodes.* A-Record
#   lineinfile: 
#     dest=/etc/hosts 
#     regexp=".*logs.{{ arc['space']['space_domain'] }}$" 
#     line="{{ hostvars[item]['cluster_ip'] }} nodes.{{ arc['space']['space_domain'] }}" 
#     state=present
#   when: hostvars[item]['cluster_ip'] is defined
#   with_items: "{{ groups['cluster'] }}"

# - name: Set up authorized keys for user root
#   authorized_key: user=root key="{{ item }}"
#   with_file:
#     - "{{ ansible_ssh_public_key_file }}"

# - name: Set up authorized keys for user apollo
#   authorized_key: user=apollo key="{{ item }}"
#   with_file:
#     - "{{ ansible_ssh_public_key_file }}"
#     - "/home/apollo/.ssh/id_rsa.pub"

# - name: Set root SSH Pem key
#   copy:
#     src="{{ ansible_ssh_private_key_file }}"
#     dest=/root/id_rsa.pem
#     owner=root
#     group=root
#     mode=0600

# - name: Set root SSH Private key
#   copy:
#     src="{{ ansible_ssh_private_key_file }}"
#     dest=/root/.ssh/id_rsa
#     owner=root
#     group=root
#     mode=0600

# - name: Set root SSH Public key
#   copy:
#     src="{{ ansible_ssh_public_key_file }}"
#     dest=/root/.ssh/id_rsa.pub
#     owner=root
#     group=root
#     mode=0600
    
- name: Enabling passwordless sudo
  lineinfile:
    path: /etc/sudoers
    state: present
    regexp: '^%sudo'
    line: '%sudo ALL=(ALL) NOPASSWD: ALL'
    validate: 'visudo -cf %s'

- name: Unlocking apt
  command: apt update
  changed_when: False
  check_mode: no

- name: Installing apt dependencies
  apt:
    name:
      - python3
      - python3-apt
      - python3-pip
      - python3-dev
      - python3-setuptools
      - git
      - curl
      - apache2-utils
      - gcc
      - apt-transport-https
      - ca-certificates
      - sysstat
      - lm-sensors
      - make
      - adduser
      - open-iscsi
      - resolvconf
      - unzip
      - gnupg2
      - fail2ban
      - moreutils
    state: present
    update_cache: False

- name: Installing pip dependencies
  pip:
    name:
      - jsondiff
      - pyyaml
      - docker
      - psutil
      - jmespath
      - python-dotenv
      - docker-compose