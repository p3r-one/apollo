- name: "creating {{ server_name }}"
  block:
    - community.general.docker_container:
        name: "{{ server_name }}"
        image: "{{ blueprint['spec']['image'] }}"
        command: server
        state: started
        #recreate: yes
        privileged: yes
        container_default_behavior: compatibility
        tmpfs:
          - /run
          - /var/run
        exposed_ports:
          - "6443"
        ports:
          - 6443:6443
        volumes:
          - k3s-server:/var/lib/rancher/k3s
          - "{{ apollo_space_dir }}:/output"
        labels: "{{ blueprint['spec']['meta']['labels'] }}"
        env:
          K3S_TOKEN: "{{ hostvars[inventory_hostname]['id'] | b64encode }}"
          K3S_KUBECONFIG_OUTPUT: /output/kubeconfig.yml
          K3S_KUBECONFIG_MODE: "666"
      register: server
      vars:
        server_name: "{{ blueprint['spec']['meta']['name'] + master_index|default(1)|string }}"
      when:
        - group == "master"
      loop: "{{ range(1, blueprint['count'] + 1 )|list }}"
      loop_control:
        loop_var: master_index
      tags:
        - create

    - name: showing server
      debug:
        var: server
        verbosity: 1

    - name: "adding {{ item.ansible_facts.docker_container['Name'].split('/')[1] }} to inventory"
      add_host:
        groups: 
          - "{{ group }}"
          - cluster
        hostname: "{{ item.ansible_facts.docker_container['Name'].split('/')[1] }}"
        ansible_connection: docker
      with_items: "{{ server.results }}"


- name: "creating {{ server_name }}"
  block:
    - community.general.docker_container:
        name: "{{ server_name }}"
        image: "{{ blueprint['spec']['image'] }}"
        state: started
        container_default_behavior: compatibility
        #recreate: yes
        privileged: yes
        tmpfs:
          - /run
          - /var/run
        labels: "{{ blueprint['spec']['meta']['labels'] }}"
        env:
          K3S_URL: "https://{{ groups['master'][0] }}:6443"
          K3S_TOKEN: "{{ hostvars[inventory_hostname]['id'] | b64encode }}"
      register: server
      vars:
        server_name: "{{ blueprint['spec']['meta']['name'] + master_index|default(1)|string }}"

    - name: adding server to inventory
      add_host:
        groups: 
          - "{{ group }}"
          - cluster
        hostname: "{{ blueprint['spec']['meta']['name'] + index|default(1)|string }}"
        ansible_connection: docker
  when:
      - group == "node"

# - name: show inventory
#   debug:
#     var: hostvars
#     verbosity: 1